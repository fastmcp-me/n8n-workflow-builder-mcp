{
  "nodeType": "n8n-nodes-base.googleCloudStorage",
  "displayName": "Google Cloud Storage",
  "description": "Use the Google Cloud Storage API",
  "version": 1,
  "properties": [
    {
      "name": "projectId",
      "displayName": "Project ID",
      "type": "string",
      "default": "",
      "placeholder": "Project ID",
      "required": true
    },
    {
      "name": "bucketName",
      "displayName": "Bucket Name",
      "type": "string",
      "default": "",
      "placeholder": "Bucket Name",
      "required": true
    },
    {
      "name": "prefix",
      "displayName": "Prefix",
      "type": "string",
      "default": "",
      "placeholder": "Filter for Bucket Names"
    },
    {
      "name": "projection",
      "displayName": "Projection",
      "type": "options",
      "default": null
    },
    {
      "name": "No ACL",
      "default": null
    },
    {
      "name": "returnAll",
      "displayName": "Return All",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit"
    },
    {
      "name": "getFilters",
      "displayName": "Filters",
      "type": "collection",
      "default": {},
      "description": "Only return data if the metageneration value of the Bucket matches the sent value",
      "placeholder": "Add Filter"
    },
    {
      "name": "ifMetagenerationNotMatch",
      "displayName": "Metageneration Exclude",
      "type": "number",
      "default": 0,
      "description": "Only return data if the metageneration value of the Bucket does not match the sent value"
    },
    {
      "name": "createAcl",
      "displayName": "Predefined Access Control",
      "type": "collection",
      "default": {},
      "placeholder": "Add Access Control Parameters"
    },
    {
      "name": "Private",
      "default": null
    },
    {
      "name": "Project Private",
      "default": null
    },
    {
      "name": "Public Read",
      "default": null
    },
    {
      "name": "Public Read/Write",
      "default": null
    },
    {
      "name": "predefinedDefaultObjectAcl",
      "displayName": "Predefined Default Object ACL",
      "type": "options",
      "default": "authenticatedRead",
      "placeholder": "Apply a predefined set of default object access controls to this bucket"
    },
    {
      "name": "Bucket Owner Full Control",
      "default": null
    },
    {
      "name": "Bucket Owner Read",
      "default": null
    },
    {
      "name": "createBody",
      "displayName": "Additional Parameters",
      "type": "collection",
      "default": {},
      "placeholder": "Add Metadata Parameter"
    },
    {
      "name": "billing",
      "displayName": "Billing",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's billing configuration"
    },
    {
      "name": "cors",
      "displayName": "CORS",
      "type": "json",
      "default": "[]",
      "placeholder": "The bucket's Cross Origin Resource Sharing configuration"
    },
    {
      "name": "customPlacementConfig",
      "displayName": "Custom Placement Config",
      "type": "json",
      "default": "{}",
      "placeholder": "The configuration for the region(s) for the Bucket"
    },
    {
      "name": "dataLocations",
      "displayName": "Data Locations",
      "type": "json",
      "default": "[]",
      "placeholder": "The list of individual regions that comprise a dual-region Bucket"
    },
    {
      "name": "defaultEventBasedHold",
      "displayName": "Default Event Based Hold",
      "type": "boolean",
      "default": true,
      "placeholder": "Whether or not to automatically apply an event based hold to new objects"
    },
    {
      "name": "defaultObjectAcl",
      "displayName": "Default Object ACL",
      "type": "json",
      "default": "[]",
      "placeholder": "Default Access Controls for new objects when no ACL is provided"
    },
    {
      "name": "encryption",
      "displayName": "Encryption",
      "type": "json",
      "default": "{}",
      "placeholder": "Encryption configuration for a bucket"
    },
    {
      "name": "iamConfiguration",
      "displayName": "IAM Configuration",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's IAM configuration"
    },
    {
      "name": "labels",
      "displayName": "Labels",
      "type": "json",
      "default": "{}",
      "placeholder": "User provided bucket labels, in key/value pairs"
    },
    {
      "name": "lifecycle",
      "displayName": "Lifecycle",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's lifecycle configuration"
    },
    {
      "name": "location",
      "displayName": "Location",
      "type": "string",
      "default": "US",
      "placeholder": "The location of the bucket"
    },
    {
      "name": "logging",
      "displayName": "Logging",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's logging configuration"
    },
    {
      "name": "retentionPolicy",
      "displayName": "Retention Policy",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's retention policy"
    },
    {
      "name": "rpo",
      "displayName": "Recovery Point Objective",
      "type": "string",
      "default": "DEFAULT",
      "placeholder": "The recovery point objective for the bucket"
    },
    {
      "name": "storageClass",
      "displayName": "Storage Class",
      "type": "string",
      "default": "STANDARD",
      "placeholder": "The bucket's default storage class for objects that don't define one"
    },
    {
      "name": "versioning",
      "displayName": "Versioning",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's versioning configuration"
    },
    {
      "name": "website",
      "displayName": "Website",
      "type": "json",
      "default": "{}",
      "placeholder": "The bucket's website configuration for when it is used to host a website"
    },
    {
      "name": "operation",
      "displayName": "Operation",
      "type": "options",
      "default": null,
      "description": "Create a new Bucket",
      "options": []
    },
    {
      "name": "Delete",
      "default": null,
      "description": "Delete an empty Bucket"
    },
    {
      "name": "Get",
      "default": null,
      "description": "Get metadata for a specific Bucket"
    },
    {
      "name": "Get Many",
      "default": null,
      "description": "Get list of Buckets"
    },
    {
      "name": "objectName",
      "displayName": "Object Name",
      "type": "string",
      "default": "",
      "placeholder": "Object Name",
      "required": true
    },
    {
      "name": "updateProjection",
      "displayName": "Projection",
      "type": "options",
      "default": null
    },
    {
      "name": "alt",
      "displayName": "Return Data",
      "type": "options",
      "default": "json",
      "placeholder": "The type of data to return from the request"
    },
    {
      "name": "Object Data",
      "default": null
    },
    {
      "name": "createFromBinary",
      "displayName": "Use Input Binary Field",
      "type": "boolean",
      "default": true,
      "description": "Whether the data for creating a file should come from a binary field"
    },
    {
      "name": "createBinaryPropertyName",
      "displayName": "Input Binary Field",
      "type": "string",
      "default": "data"
    },
    {
      "name": "createContent",
      "displayName": "File Content",
      "type": "string",
      "default": "",
      "description": "Content of the file to be uploaded"
    },
    {
      "name": "binaryPropertyName",
      "displayName": "Put Output File in Field",
      "type": "string",
      "default": "data"
    },
    {
      "name": "maxResults",
      "displayName": "Limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return"
    },
    {
      "name": "createData",
      "displayName": "Create Fields",
      "type": "collection",
      "default": {},
      "placeholder": "Add Create Body Field"
    },
    {
      "name": "cacheControl",
      "displayName": "Cache Control",
      "type": "string",
      "default": ""
    },
    {
      "name": "contentDisposition",
      "displayName": "Content Disposition",
      "type": "string",
      "default": ""
    },
    {
      "name": "contentEncoding",
      "displayName": "Content Encoding",
      "type": "string",
      "default": ""
    },
    {
      "name": "contentLanguage",
      "displayName": "Content Language",
      "type": "string",
      "default": ""
    },
    {
      "name": "contentType",
      "displayName": "Content Type",
      "type": "string",
      "default": ""
    },
    {
      "name": "crc32c",
      "displayName": "CRC32c Checksum",
      "type": "string",
      "default": ""
    },
    {
      "name": "customTime",
      "displayName": "Custom Time",
      "type": "string",
      "default": ""
    },
    {
      "name": "eventBasedHold",
      "displayName": "Event Based Hold",
      "type": "boolean",
      "default": false
    },
    {
      "name": "md5Hash",
      "displayName": "MD5 Hash",
      "type": "string",
      "default": ""
    },
    {
      "name": "metadata",
      "displayName": "Metadata",
      "type": "json",
      "default": "{}"
    },
    {
      "name": "temporaryHold",
      "displayName": "Temporary Hold",
      "type": "boolean",
      "default": false
    },
    {
      "name": "updateData",
      "displayName": "Update Fields",
      "type": "collection",
      "default": "{\n\t\t\tacl: '[]',\n\t\t}",
      "placeholder": "Add Update Body Field"
    },
    {
      "name": "createQuery",
      "displayName": "Additional Parameters",
      "type": "collection",
      "default": {},
      "placeholder": "Add Additional Parameters"
    },
    {
      "name": "getParameters",
      "displayName": "Additional Parameters",
      "type": "collection",
      "default": {},
      "placeholder": "Add Additional Parameters"
    },
    {
      "name": "metagenAndAclQuery",
      "displayName": "Additional Parameters",
      "type": "collection",
      "default": {},
      "placeholder": "Add Additional Parameters"
    },
    {
      "name": "encryptionHeaders",
      "displayName": "Encryption Headers",
      "type": "collection",
      "default": {},
      "placeholder": "Add Encryption Headers"
    },
    {
      "name": "X-Goog-Encryption-Key",
      "displayName": "Encryption Key",
      "type": "string",
      "default": "",
      "placeholder": "Base64 encoded string of your AES256 encryption key"
    },
    {
      "name": "X-Goog-Encryption-Key-Sha256",
      "displayName": "Encryption Key Hash",
      "type": "string",
      "default": "",
      "placeholder": "Base64 encoded string of the SHA256 hash of your encryption key"
    },
    {
      "name": "listFilters",
      "displayName": "Additional Parameters",
      "type": "collection",
      "default": {},
      "placeholder": "Add Additional Parameters"
    },
    {
      "name": "endOffset",
      "displayName": "End Offset",
      "type": "string",
      "default": "",
      "placeholder": "Filter results to names lexicographically before this value"
    },
    {
      "name": "includeTrailingDelimiter",
      "displayName": "Include Trailing Delimiter",
      "type": "boolean",
      "default": false,
      "placeholder": "If true, objects will appear with exactly one instance of delimiter at the end of the name"
    },
    {
      "name": "startOffset",
      "displayName": "Start Offset",
      "type": "string",
      "default": "",
      "placeholder": "Filter results to names lexicographically equal or after this value"
    },
    {
      "name": "versions",
      "displayName": "Versions",
      "type": "boolean",
      "default": false,
      "placeholder": "If true, list all versions of objects as distinct entries"
    }
  ],
  "credentialsConfig": []
}