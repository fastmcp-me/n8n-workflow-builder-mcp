{
  "nodeType": "n8n-nodes-base.graphql",
  "displayName": "GraphQL",
  "description": "Makes a GraphQL request and returns the received data",
  "version": [
    1,
    1.1
  ],
  "properties": [
    {
      "name": "authentication",
      "displayName": "Authentication",
      "type": "options",
      "default": "none",
      "description": "The way to authenticate",
      "options": [
        {
          "name": "Basic Auth",
          "value": "basicAuth"
        },
        {
          "name": "Custom Auth",
          "value": "customAuth"
        },
        {
          "name": "Digest Auth",
          "value": "digestAuth"
        },
        {
          "name": "Header Auth",
          "value": "headerAuth"
        },
        {
          "name": "None",
          "value": "none"
        },
        {
          "name": "OAuth1",
          "value": "oAuth1"
        },
        {
          "name": "OAuth2",
          "value": "oAuth2"
        },
        {
          "name": "Query Auth",
          "value": "queryAuth"
        }
      ]
    },
    {
      "name": "requestMethod",
      "displayName": "HTTP Request Method",
      "type": "options",
      "default": "POST",
      "description": "The underlying HTTP request method to use",
      "options": [
        {
          "name": "GET",
          "value": "GET"
        },
        {
          "name": "POST",
          "value": "POST"
        }
      ]
    },
    {
      "name": "endpoint",
      "displayName": "Endpoint",
      "type": "string",
      "default": "",
      "description": "The GraphQL endpoint",
      "placeholder": "http://example.com/graphql",
      "required": true
    },
    {
      "name": "allowUnauthorizedCerts",
      "displayName": "Ignore SSL Issues (Insecure)",
      "type": "boolean",
      "default": false,
      "description": "Whether to download the response even if SSL certificate validation is not possible"
    },
    {
      "name": "requestFormat",
      "displayName": "Request Format",
      "type": "options",
      "default": "graphql",
      "description": "The format for the query payload",
      "required": true,
      "options": [
        {
          "name": "GraphQL (Raw)",
          "value": "graphql"
        },
        {
          "name": "JSON",
          "value": "json"
        }
      ],
      "displayOptions": {
        "show": {
          "requestMethod": [
            "POST"
          ],
          "@version": [
            1
          ]
        }
      }
    },
    {
      "name": "query",
      "displayName": "Query",
      "type": "string",
      "default": "",
      "description": "GraphQL query",
      "required": true,
      "typeOptions": {
        "rows": 6
      }
    },
    {
      "name": "variables",
      "displayName": "Variables",
      "type": "json",
      "default": "",
      "description": "Query variables as JSON object",
      "displayOptions": {
        "show": {
          "requestFormat": [
            "json"
          ],
          "requestMethod": [
            "POST"
          ]
        }
      }
    },
    {
      "name": "operationName",
      "displayName": "Operation Name",
      "type": "string",
      "default": "",
      "description": "Name of operation to execute",
      "displayOptions": {
        "show": {
          "requestFormat": [
            "json"
          ],
          "requestMethod": [
            "POST"
          ]
        }
      }
    },
    {
      "name": "responseFormat",
      "displayName": "Response Format",
      "type": "options",
      "default": "json",
      "description": "The format in which the data gets returned from the URL",
      "options": [
        {
          "name": "JSON",
          "value": "json"
        },
        {
          "name": "String",
          "value": "string"
        }
      ]
    },
    {
      "name": "dataPropertyName",
      "displayName": "Response Data Property Name",
      "type": "string",
      "default": "data",
      "description": "Name of the property to which to write the response data",
      "required": true,
      "displayOptions": {
        "show": {
          "responseFormat": [
            "string"
          ]
        }
      }
    },
    {
      "name": "headerParametersUi",
      "displayName": "Headers",
      "type": "fixedCollection",
      "default": {},
      "description": "The headers to send",
      "placeholder": "Add Header",
      "typeOptions": {
        "multipleValues": true
      }
    }
  ],
  "credentialsConfig": [
    {
      "name": "httpBasicAuth",
      "required": true
    },
    {
      "name": "authentication",
      "required": false
    },
    {
      "name": "requestMethod",
      "required": false
    },
    {
      "name": "endpoint",
      "required": true
    },
    {
      "name": "requestFormat",
      "required": true
    },
    {
      "name": "query",
      "required": true
    },
    {
      "name": "dataPropertyName",
      "required": true
    }
  ],
  "io": {
    "inputs": [],
    "outputs": [],
    "outputNames": [],
    "hints": {}
  },
  "wiring": {
    "role": "generic",
    "requires": [],
    "optional": [],
    "consumedBy": [],
    "consumes": [],
    "produces": []
  }
}