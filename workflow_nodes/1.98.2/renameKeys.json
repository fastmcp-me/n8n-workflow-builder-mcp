{
  "nodeType": "n8n-nodes-base.renameKeys",
  "displayName": "Rename Keys",
  "description": "Update item field names",
  "version": 1,
  "properties": [
    {
      "name": "keys",
      "displayName": "Keys",
      "type": "fixedCollection",
      "default": {},
      "description": "Adds a key which should be renamed",
      "placeholder": "Add new key"
    },
    {
      "name": "newKey",
      "displayName": "New Key Name",
      "type": "string",
      "default": "",
      "description": "The name the key should be renamed to. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.newKey\".",
      "placeholder": "newKey"
    },
    {
      "name": "additionalOptions",
      "displayName": "Additional Options",
      "type": "collection",
      "default": {},
      "description": "Adds a regular expressiond",
      "placeholder": "Add option",
      "typeOptions": {
        "multipleValues": true
      }
    },
    {
      "name": "searchRegex",
      "displayName": "Regular Expression",
      "type": "string",
      "default": "",
      "description": "Regex to match the key name",
      "placeholder": "e.g. [N-n]ame"
    },
    {
      "name": "replaceRegex",
      "displayName": "Replace With",
      "type": "string",
      "default": "",
      "description": "The name the key/s should be renamed to. It's possible to use regex captures e.g. $1, $2, ...",
      "placeholder": "replacedName"
    },
    {
      "name": "options",
      "displayName": "Options",
      "type": "collection",
      "default": {},
      "description": "Whether to use case insensitive match",
      "placeholder": "Add Regex Option"
    },
    {
      "name": "depth",
      "displayName": "Max Depth",
      "type": "number",
      "default": null,
      "description": "Maximum depth to replace keys"
    }
  ],
  "credentialsConfig": []
}