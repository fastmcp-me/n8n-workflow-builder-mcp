{
  "nodeType": "n8n-nodes-base.redis",
  "displayName": "Redis",
  "description": "Get, send and update data in Redis",
  "version": 1,
  "properties": [
    {
      "name": "operation",
      "displayName": "Operation",
      "type": "options",
      "default": "info",
      "description": "Delete a key from Redis",
      "options": [
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a key from Redis"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get the value of a key from Redis"
        },
        {
          "name": "Increment",
          "value": "incr",
          "description": "Atomically increments a key by 1. Creates the key if it does not exist."
        },
        {
          "name": "Info",
          "value": "info",
          "description": "Returns generic information about the Redis instance"
        },
        {
          "name": "Keys",
          "value": "keys",
          "description": "Returns all the keys matching a pattern"
        },
        {
          "name": "Pop",
          "value": "pop",
          "description": "Pop data from a redis list"
        },
        {
          "name": "Publish",
          "value": "publish",
          "description": "Publish message to redis channel"
        },
        {
          "name": "Push",
          "value": "push",
          "description": "Push data to a redis list"
        },
        {
          "name": "Set",
          "value": "set",
          "description": "Set the value of a key in redis"
        }
      ]
    },
    {
      "name": "key",
      "displayName": "Key",
      "type": "string",
      "default": "",
      "description": "Name of the key to delete from Redis",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "name": "propertyName",
      "displayName": "Name",
      "type": "string",
      "default": "propertyName",
      "description": "Name of the property to write received data to. Supports dot-notation. Example: \"data.person[0].name\".",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "name": "keyType",
      "displayName": "Key Type",
      "type": "options",
      "default": "automatic",
      "description": "Requests the type before requesting the data (slower)",
      "options": [
        {
          "name": "Automatic",
          "value": "automatic",
          "description": "Requests the type before requesting the data (slower)"
        },
        {
          "name": "Hash",
          "value": "hash",
          "description": "Data in key is of type 'hash'"
        },
        {
          "name": "List",
          "value": "list",
          "description": "Data in key is of type 'lists'"
        },
        {
          "name": "Sets",
          "value": "sets",
          "description": "Data in key is of type 'sets'"
        },
        {
          "name": "String",
          "value": "string",
          "description": "Data in key is of type 'string'"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "name": "options",
      "displayName": "Options",
      "type": "collection",
      "default": {},
      "description": "<p>By default, dot-notation is used in property names. This means that \"a.b\" will set the property \"b\" underneath \"a\" so { \"a\": { \"b\": value} }.<p></p>If that is not intended this can be deactivated, it will then set { \"a.b\": value } instead.</p>.",
      "placeholder": "Add option",
      "options": [
        {
          "name": "dotNotation",
          "displayName": "Dot Notation",
          "type": "boolean",
          "default": true,
          "description": "<p>By default, dot-notation is used in property names. This means that \"a.b\" will set the property \"b\" underneath \"a\" so { \"a\": { \"b\": value} }.<p></p>If that is not intended this can be deactivated, it will then set { \"a.b\": value } instead.</p>."
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "name": "expire",
      "displayName": "Expire",
      "type": "boolean",
      "default": false,
      "description": "Whether to set a timeout on key",
      "displayOptions": {
        "show": {
          "operation": [
            "incr"
          ]
        }
      }
    },
    {
      "name": "ttl",
      "displayName": "TTL",
      "type": "number",
      "default": 60,
      "description": "Number of seconds before key expiration",
      "typeOptions": {
        "minValue": 1
      },
      "displayOptions": {
        "show": {
          "operation": [
            "incr"
          ],
          "expire": [
            true
          ]
        }
      }
    },
    {
      "name": "keyPattern",
      "displayName": "Key Pattern",
      "type": "string",
      "default": "",
      "description": "The key pattern for the keys to return",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "keys"
          ]
        }
      }
    },
    {
      "name": "getValues",
      "displayName": "Get Values",
      "type": "boolean",
      "default": true,
      "description": "Whether to get the value of matching keys",
      "displayOptions": {
        "show": {
          "operation": [
            "keys"
          ]
        }
      }
    },
    {
      "name": "value",
      "displayName": "Value",
      "type": "string",
      "default": "",
      "description": "The value to write in Redis",
      "displayOptions": {
        "show": {
          "operation": [
            "set"
          ]
        }
      }
    },
    {
      "name": "valueIsJSON",
      "displayName": "Value Is JSON",
      "type": "boolean",
      "default": true,
      "description": "Whether the value is JSON or key value pairs",
      "displayOptions": {
        "show": {
          "keyType": [
            "hash"
          ]
        }
      }
    },
    {
      "name": "channel",
      "displayName": "Channel",
      "type": "string",
      "default": "",
      "description": "Channel name",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "publish"
          ]
        }
      }
    },
    {
      "name": "messageData",
      "displayName": "Data",
      "type": "string",
      "default": "",
      "description": "Data to publish",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "publish"
          ]
        }
      }
    },
    {
      "name": "list",
      "displayName": "List",
      "type": "string",
      "default": "",
      "description": "Name of the list in Redis",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "push",
            "pop"
          ]
        }
      }
    },
    {
      "name": "tail",
      "displayName": "Tail",
      "type": "boolean",
      "default": false,
      "description": "Whether to push or pop data from the end of the list",
      "displayOptions": {
        "show": {
          "operation": [
            "push",
            "pop"
          ]
        }
      }
    }
  ],
  "credentialsConfig": [
    {
      "name": "redis",
      "required": true
    },
    {
      "name": "operation",
      "required": false
    },
    {
      "name": "key",
      "required": true
    },
    {
      "name": "options",
      "required": false
    },
    {
      "name": "key",
      "required": true
    },
    {
      "name": "valueIsJSON",
      "required": true
    }
  ],
  "io": {
    "inputs": [
      "Main"
    ],
    "outputs": [
      "Main"
    ],
    "outputNames": [],
    "hints": {}
  },
  "wiring": {
    "role": "generic",
    "requires": [],
    "optional": [],
    "consumedBy": [],
    "consumes": [
      "Main"
    ],
    "produces": [
      "Main"
    ]
  }
}