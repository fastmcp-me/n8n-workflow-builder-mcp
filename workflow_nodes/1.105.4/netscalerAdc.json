{
  "nodeType": "n8n-nodes-base.netscalerAdc",
  "displayName": "Netscaler ADC",
  "description": "Consume Netscaler ADC API",
  "version": 1,
  "properties": [
    {
      "name": "operation",
      "displayName": "Operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create"
        },
        {
          "name": "Install",
          "value": "install"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ]
        }
      }
    },
    {
      "name": "certificateFileName",
      "displayName": "Certificate File Name",
      "type": "string",
      "default": "",
      "description": "Name for and, optionally, path to the generated certificate file. /nsconfig/ssl/ is the default path.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "certificateFormat",
      "displayName": "Certificate Format",
      "type": "options",
      "default": "PEM",
      "description": "Format in which the certificate is stored on the appliance",
      "required": true,
      "options": [
        {
          "name": "PEM",
          "value": "PEM"
        },
        {
          "name": "DER",
          "value": "DER"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "certificateType",
      "displayName": "Certificate Type",
      "type": "options",
      "default": "ROOT_CERT",
      "description": "You must specify the key file name. The generated Root-CA certificate can be used for signing end-user client or server certificates or to create Intermediate-CA certificates.",
      "required": true,
      "options": [
        {
          "name": "Root-CA",
          "value": "ROOT_CERT",
          "description": "You must specify the key file name. The generated Root-CA certificate can be used for signing end-user client or server certificates or to create Intermediate-CA certificates."
        },
        {
          "name": "Intermediate-CA",
          "value": "INTM_CERT",
          "description": "Intermediate-CA certificate"
        },
        {
          "name": "Server",
          "value": "SRVR_CERT",
          "description": "SSL server certificate used on SSL servers for end-to-end encryption"
        },
        {
          "name": "Client",
          "value": "CLNT_CERT",
          "description": "End-user client certificate used for client authentication"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "certificateRequestFileName",
      "displayName": "Certificate Request File Name",
      "type": "string",
      "default": "",
      "description": "Name for and, optionally, path to the certificate-signing request (CSR). /nsconfig/ssl/ is the default path.",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "certificate"
          ]
        }
      }
    },
    {
      "name": "caCertificateFileName",
      "displayName": "CA Certificate File Name",
      "type": "string",
      "default": "",
      "description": "Name of the CA certificate file that issues and signs the Intermediate-CA certificate or the end-user client and server certificates",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ],
          "certificateType": [
            "INTM_CERT",
            "SRVR_CERT",
            "CLNT_CERT"
          ]
        }
      }
    },
    {
      "name": "caCertificateFileFormat",
      "displayName": "CA Certificate File Format",
      "type": "options",
      "default": "PEM",
      "description": "Format of the CA certificate",
      "required": true,
      "options": [
        {
          "name": "PEM",
          "value": "PEM"
        },
        {
          "name": "DER",
          "value": "DER"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ],
          "certificateType": [
            "INTM_CERT",
            "SRVR_CERT",
            "CLNT_CERT"
          ]
        }
      }
    },
    {
      "name": "caPrivateKeyFileName",
      "displayName": "CA Private Key File Name",
      "type": "string",
      "default": "",
      "description": "Private key, associated with the CA certificate that is used to sign the Intermediate-CA certificate or the end-user client and server certificate. If the CA key file is password protected, the user is prompted to enter the pass phrase that was used to encrypt the key.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ],
          "certificateType": [
            "INTM_CERT",
            "SRVR_CERT",
            "CLNT_CERT"
          ]
        }
      }
    },
    {
      "name": "caPrivateKeyFileFormat",
      "displayName": "CA Private Key File Format",
      "type": "options",
      "default": "PEM",
      "description": "Format of the CA certificate",
      "required": true,
      "options": [
        {
          "name": "PEM",
          "value": "PEM"
        },
        {
          "name": "DER",
          "value": "DER"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ],
          "certificateType": [
            "INTM_CERT",
            "SRVR_CERT",
            "CLNT_CERT"
          ]
        }
      }
    },
    {
      "name": "privateKeyFileName",
      "displayName": "Private Key File Name",
      "type": "string",
      "default": "",
      "description": "Name for and, optionally, path to the private key. You can either use an existing RSA or DSA key that you own or create a new private key on the Netscaler ADC. This file is required only when creating a self-signed Root-CA certificate. The key file is stored in the /nsconfig/ssl directory by default.",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "certificate"
          ],
          "certificateType": [
            "ROOT_CERT"
          ]
        }
      }
    },
    {
      "name": "caSerialFileNumber",
      "displayName": "CA Serial File Number",
      "type": "string",
      "default": "",
      "description": "Serial number file maintained for the CA certificate. This file contains the serial number of the next certificate to be issued or signed by the CA.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ],
          "certificateType": [
            "INTM_CERT",
            "SRVR_CERT",
            "CLNT_CERT"
          ]
        }
      }
    },
    {
      "name": "privateKeyFormat",
      "displayName": "Private Key Format",
      "type": "options",
      "default": "PEM",
      "description": "Format in which the key is stored on the appliance",
      "required": true,
      "options": [
        {
          "name": "PEM",
          "value": "PEM"
        },
        {
          "name": "DER",
          "value": "DER"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ],
          "certificateType": [
            "ROOT_CERT"
          ]
        }
      }
    },
    {
      "name": "additionalFields",
      "displayName": "Additional Fields",
      "type": "collection",
      "default": {},
      "description": "Name for and, optionally, path to the private key. You can either use an existing RSA or DSA key that you own or create a new private key on the Netscaler ADC. This file is required only when creating a self-signed Root-CA certificate. The key file is stored in the /nsconfig/ssl directory by default.",
      "placeholder": "Add Field",
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "certificateKeyPairName",
      "displayName": "Certificate-Key Pair Name",
      "type": "string",
      "default": "",
      "description": "Name for the certificate and private-key pair",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "install"
          ]
        }
      }
    },
    {
      "name": "password",
      "displayName": "Password",
      "type": "string",
      "default": "",
      "description": "Input format of the certificate and the private-key files. The three formats supported by the appliance are: PEM - Privacy Enhanced Mail DER - Distinguished Encoding Rule PFX - Personal Information Exchange.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "install"
          ],
          "certificateFormat": [
            "PEM"
          ]
        }
      }
    },
    {
      "name": "notifyExpiration",
      "displayName": "Notify When Expires",
      "type": "boolean",
      "default": false,
      "description": "Whether to alert when the certificate is about to expire",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "install"
          ]
        }
      }
    },
    {
      "name": "notificationPeriod",
      "displayName": "Notification Period (Days)",
      "type": "number",
      "default": 10,
      "description": "Time, in number of days, before certificate expiration, at which to generate an alert that the certificate is about to expire",
      "required": true,
      "typeOptions": {
        "minValue": 10,
        "maxValue": 100
      },
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "install"
          ],
          "notifyExpiration": [
            true
          ]
        }
      }
    },
    {
      "name": "certificateBundle",
      "displayName": "Certificate Bundle",
      "type": "boolean",
      "default": false,
      "description": "Whether to parse the certificate chain as a single file after linking the server certificate to its issuer's certificate within the file",
      "displayOptions": {
        "show": {
          "resource": [
            "certificate"
          ],
          "operation": [
            "install"
          ],
          "certificateFormat": [
            "PEM"
          ]
        }
      }
    },
    {
      "name": "fileLocation",
      "displayName": "File Location",
      "type": "string",
      "default": "/nsconfig/ssl/",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "binaryProperty",
      "displayName": "Input Data Field Name",
      "type": "string",
      "default": "data",
      "description": "The name of the incoming field containing the binary file data to be processed",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "options",
      "displayName": "Options",
      "type": "collection",
      "default": {},
      "description": "Name of the file. It should not include filepath.",
      "placeholder": "Add option",
      "options": [
        {
          "name": "fileName",
          "displayName": "File Name",
          "type": "string",
          "default": "",
          "description": "Name of the file. It should not include filepath."
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "fileName",
      "displayName": "File Name",
      "type": "string",
      "default": "",
      "description": "Name of the file. It should not include filepath.",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "delete",
            "download"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "resource",
      "displayName": "Resource",
      "type": "options",
      "default": "file",
      "options": [
        {
          "name": "Certificate",
          "value": "certificate"
        },
        {
          "name": "File",
          "value": "file"
        }
      ]
    }
  ],
  "credentialsConfig": [
    {
      "name": "citrixAdcApi",
      "required": true
    },
    {
      "name": "resource",
      "required": false
    }
  ],
  "io": {
    "inputs": [
      "Main"
    ],
    "outputs": [
      "Main"
    ],
    "outputNames": [],
    "hints": {}
  },
  "wiring": {
    "role": "generic",
    "requires": [],
    "optional": [],
    "consumedBy": [],
    "consumes": [
      "Main"
    ],
    "produces": [
      "Main"
    ]
  }
}