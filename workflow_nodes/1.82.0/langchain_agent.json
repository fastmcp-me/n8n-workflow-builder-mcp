{
  "nodeType": "@n8n/n8n-nodes-langchain.agent",
  "displayName": "AI Agent",
  "description": "Generates an action plan and executes it. Can use external tools.",
  "version": [
    1,
    1.1,
    1.2,
    1.3,
    1.4,
    1.5,
    1.6,
    1.7,
    1.8
  ],
  "properties": [
    {
      "name": "text",
      "displayName": "Text",
      "type": "string",
      "default": "={{ $json.input }}",
      "required": true,
      "displayOptions": {
        "show": {
          "agent": [
            "conversationalAgent"
          ],
          "@version": [
            1
          ]
        }
      }
    },
    {
      "name": "options",
      "displayName": "Options",
      "type": "collection",
      "default": {},
      "description": "The message that will provide the agent with a list of tools to use",
      "placeholder": "Add Option",
      "options": [
        {
          "name": "humanMessage",
          "displayName": "Human Message",
          "type": "string",
          "description": "The message that will provide the agent with a list of tools to use"
        },
        {
          "name": "systemMessage",
          "displayName": "System Message",
          "type": "string",
          "description": "The message that will be sent to the agent before the conversation starts"
        },
        {
          "name": "maxIterations",
          "displayName": "Max Iterations",
          "type": "number",
          "default": 10,
          "description": "The maximum number of iterations the agent will run before stopping"
        },
        {
          "name": "returnIntermediateSteps",
          "displayName": "Return Intermediate Steps",
          "type": "boolean",
          "default": false,
          "description": "Whether or not the output should include intermediate steps the agent took"
        }
      ],
      "typeOptions": {
        "rows": 6
      },
      "displayOptions": {
        "show": {
          "agent": [
            "conversationalAgent"
          ]
        }
      }
    },
    {
      "name": "credentials",
      "displayName": "Credentials",
      "type": "credentials",
      "default": ""
    },
    {
      "name": "sqLiteFileNotice",
      "displayName": "Pass the SQLite database into this node as binary data, e.g. by inserting a 'Read/Write Files from Disk' node beforehand",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "agent": [
            "sqlAgent"
          ],
          "dataSource": [
            "sqlite"
          ]
        }
      }
    },
    {
      "name": "binaryPropertyName",
      "displayName": "Input Binary Field",
      "type": "string",
      "default": "data",
      "placeholder": "e.g data",
      "required": true,
      "displayOptions": {
        "show": {
          "agent": [
            "sqlAgent"
          ],
          "dataSource": [
            "sqlite"
          ]
        }
      }
    },
    {
      "name": "input",
      "displayName": "Prompt",
      "type": "string",
      "default": "",
      "required": true,
      "typeOptions": {
        "rows": 5
      },
      "displayOptions": "{\n\t\t\tshow: {\n\t\t\t\tagent: ['sqlAgent'],\n\t\t\t\t'@version': [{ _cnd: { lte: 1.2 }"
    }
  ],
  "credentialsConfig": [],
  "io": {
    "inputs": [],
    "outputs": [],
    "outputNames": [],
    "hints": {}
  },
  "wiring": {
    "role": "agent",
    "requires": [
      "AiLanguageModel"
    ],
    "optional": [
      "AiMemory",
      "AiOutputParser",
      "AiTool"
    ],
    "consumedBy": [],
    "consumes": [],
    "produces": []
  }
}