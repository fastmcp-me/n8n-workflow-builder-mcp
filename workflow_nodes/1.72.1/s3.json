{
  "nodeType": "n8n-nodes-base.s3",
  "displayName": "S3",
  "description": "Sends data to any S3-compatible service",
  "version": 1,
  "properties": [
    {
      "name": "name",
      "displayName": "Name",
      "type": "string",
      "default": "",
      "description": "A succinct description of the nature, symptoms, cause, or effect of the bucket",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "additionalFields",
      "displayName": "Additional Fields",
      "type": "collection",
      "default": {},
      "description": "The canned ACL to apply to the bucket",
      "placeholder": "Add Field",
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "returnAll",
      "displayName": "Return All",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "bucket"
          ]
        }
      }
    },
    {
      "name": "limit",
      "displayName": "Limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "typeOptions": {
        "minValue": 1,
        "maxValue": 500
      },
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "bucket"
          ],
          "returnAll": [
            false
          ]
        }
      }
    },
    {
      "name": "bucketName",
      "displayName": "Bucket Name",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "name": "operation",
      "displayName": "Operation",
      "type": "options",
      "default": "create",
      "description": "Create a bucket",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a bucket"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a bucket"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many buckets"
        },
        {
          "name": "Search",
          "value": "search",
          "description": "Search within a bucket"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ]
        }
      }
    },
    {
      "name": "folderName",
      "displayName": "Folder Name",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "name": "folderKey",
      "displayName": "Folder Key",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "name": "options",
      "displayName": "Options",
      "type": "collection",
      "default": {},
      "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true",
      "placeholder": "Add Field",
      "options": [
        {
          "name": "fetchOwner",
          "displayName": "Fetch Owner",
          "type": "boolean",
          "default": false,
          "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true"
        },
        {
          "name": "folderKey",
          "displayName": "Folder Key",
          "type": "string",
          "default": ""
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "name": "sourcePath",
      "displayName": "Source Path",
      "type": "string",
      "default": "",
      "description": "The name of the source bucket should start with (/) and key name of the source object, separated by a slash (/)",
      "placeholder": "/bucket/my-image.jpg",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "copy"
          ]
        }
      }
    },
    {
      "name": "destinationPath",
      "displayName": "Destination Path",
      "type": "string",
      "default": "",
      "description": "The name of the destination bucket and key name of the destination object, separated by a slash (/)",
      "placeholder": "/bucket/my-second-image.jpg",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "copy"
          ]
        }
      }
    },
    {
      "name": "fileName",
      "displayName": "File Name",
      "type": "string",
      "default": "",
      "placeholder": "hello.txt",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ],
          "binaryData": [
            false
          ]
        }
      }
    },
    {
      "name": "binaryData",
      "displayName": "Binary File",
      "type": "boolean",
      "default": true,
      "description": "Whether the data to upload should be taken from binary field",
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "fileContent",
      "displayName": "File Content",
      "type": "string",
      "default": "",
      "description": "The text content of the file to upload",
      "placeholder": "",
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ],
          "binaryData": [
            false
          ]
        }
      }
    },
    {
      "name": "binaryPropertyName",
      "displayName": "Input Binary Field",
      "type": "string",
      "default": "data",
      "placeholder": "",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ],
          "binaryData": [
            true
          ]
        }
      }
    },
    {
      "name": "tagsUi",
      "displayName": "Tags",
      "type": "fixedCollection",
      "default": {},
      "description": "Optional extra headers to add to the message (most headers are allowed)",
      "placeholder": "Add Tag",
      "typeOptions": {
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ]
        }
      }
    },
    {
      "name": "fileKey",
      "displayName": "File Key",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "download"
          ]
        }
      }
    },
    {
      "name": "s3StandardNotice",
      "displayName": "This node is for services that use the S3 standard, e.g. Minio or Digital Ocean Spaces. For AWS S3 use the 'AWS S3' node.",
      "type": "notice",
      "default": ""
    },
    {
      "name": "resource",
      "displayName": "Resource",
      "type": "options",
      "default": "file",
      "options": [
        {
          "name": "Bucket",
          "value": "bucket"
        },
        {
          "name": "File",
          "value": "file"
        },
        {
          "name": "Folder",
          "value": "folder"
        }
      ]
    }
  ],
  "credentialsConfig": [
    {
      "name": "s3",
      "required": true
    },
    {
      "name": "s3StandardNotice",
      "required": false
    }
  ],
  "io": {
    "inputs": [],
    "outputs": [],
    "outputNames": [],
    "hints": {}
  },
  "wiring": {
    "role": "generic",
    "requires": [],
    "optional": [],
    "consumedBy": [],
    "consumes": [],
    "produces": []
  }
}