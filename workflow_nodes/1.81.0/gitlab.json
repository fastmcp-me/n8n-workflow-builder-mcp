{
  "nodeType": "n8n-nodes-base.gitlab",
  "displayName": "GitLab",
  "description": "Retrieve data from GitLab API",
  "version": 1,
  "properties": [
    {
      "name": "authentication",
      "displayName": "Authentication",
      "type": "options",
      "default": "accessToken",
      "options": [
        {
          "name": "Access Token",
          "value": "accessToken"
        },
        {
          "name": "OAuth2",
          "value": "oAuth2"
        }
      ]
    },
    {
      "name": "resource",
      "displayName": "Resource",
      "type": "options",
      "default": "issue",
      "options": [
        {
          "name": "File",
          "value": "file"
        },
        {
          "name": "Issue",
          "value": "issue"
        },
        {
          "name": "Release",
          "value": "release"
        },
        {
          "name": "Repository",
          "value": "repository"
        },
        {
          "name": "User",
          "value": "user"
        }
      ]
    },
    {
      "name": "operation",
      "displayName": "Operation",
      "type": "options",
      "default": "create",
      "description": "Create a new issue",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new issue"
        },
        {
          "name": "Create Comment",
          "value": "createComment",
          "description": "Create a new comment on an issue"
        },
        {
          "name": "Edit",
          "value": "edit",
          "description": "Edit an issue"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get the data of a single issue"
        },
        {
          "name": "Lock",
          "value": "lock",
          "description": "Lock an issue"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "owner",
      "displayName": "Project Owner",
      "type": "string",
      "default": "",
      "description": "User, group or namespace of the project",
      "placeholder": "n8n-io",
      "required": true
    },
    {
      "name": "repository",
      "displayName": "Project Name",
      "type": "string",
      "default": "",
      "description": "The name of the project",
      "placeholder": "n8n",
      "required": true,
      "displayOptions": {
        "hide": {
          "resource": [
            "user"
          ],
          "operation": [
            "getRepositories"
          ]
        }
      }
    },
    {
      "name": "title",
      "displayName": "Title",
      "type": "string",
      "default": "",
      "description": "The title of the issue",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "body",
      "displayName": "Body",
      "type": "string",
      "default": "",
      "description": "The body of the issue",
      "typeOptions": {
        "rows": 5
      },
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "due_date",
      "displayName": "Due Date",
      "type": "dateTime",
      "default": "",
      "description": "Due Date for issue",
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "labels",
      "displayName": "Labels",
      "type": "collection",
      "default": {},
      "description": "Label to add to issue",
      "options": [
        {
          "name": "label",
          "displayName": "Label",
          "type": "string",
          "default": "",
          "description": "Label to add to issue"
        }
      ],
      "typeOptions": {
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "assignee_ids",
      "displayName": "Assignees",
      "type": "collection",
      "default": {},
      "description": "User ID to assign issue to",
      "options": [
        {
          "name": "assignee",
          "displayName": "Assignee",
          "type": "number",
          "default": 0,
          "description": "User ID to assign issue to"
        }
      ],
      "typeOptions": {
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "issueNumber",
      "displayName": "Issue Number",
      "type": "number",
      "default": 0,
      "description": "The number of the issue on which to create the comment on",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "createComment"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "editFields",
      "displayName": "Edit Fields",
      "type": "collection",
      "default": {},
      "description": "The title of the issue",
      "options": [
        {
          "name": "title",
          "displayName": "Title",
          "type": "string",
          "default": "",
          "description": "The title of the issue"
        },
        {
          "name": "description",
          "displayName": "Body",
          "type": "string",
          "default": "",
          "description": "The body of the issue"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "edit"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "lockReason",
      "displayName": "Lock Reason",
      "type": "options",
      "default": "resolved",
      "description": "The issue is Off-Topic",
      "options": [
        {
          "name": "Off-Topic",
          "value": "off-topic",
          "description": "The issue is Off-Topic"
        },
        {
          "name": "Too Heated",
          "value": "too heated",
          "description": "The discussion is too heated"
        },
        {
          "name": "Resolved",
          "value": "resolved",
          "description": "The issue got resolved"
        },
        {
          "name": "Spam",
          "value": "spam",
          "description": "The issue is spam"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "lock"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "name": "releaseTag",
      "displayName": "Tag",
      "type": "string",
      "default": "",
      "description": "The tag of the release",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "release"
          ]
        }
      }
    },
    {
      "name": "additionalFields",
      "displayName": "Additional Fields",
      "type": "collection",
      "default": {},
      "description": "The name of the release",
      "options": [
        {
          "name": "name",
          "displayName": "Name",
          "type": "string",
          "default": "",
          "description": "The name of the release"
        },
        {
          "name": "description",
          "displayName": "Description",
          "type": "string",
          "default": "",
          "description": "The description of the release"
        },
        {
          "name": "ref",
          "displayName": "Ref",
          "type": "string",
          "default": "",
          "description": "If Tag doesnâ€™t exist, the release will be created from Ref. It can be a commit SHA, another tag name, or a branch name."
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "create"
          ],
          "resource": [
            "release"
          ]
        }
      }
    },
    {
      "name": "projectId",
      "displayName": "Project ID",
      "type": "string",
      "default": "",
      "description": "The ID or URL-encoded path of the project",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "delete",
            "get"
          ],
          "resource": [
            "release"
          ]
        }
      }
    },
    {
      "name": "tag_name",
      "displayName": "Tag Name",
      "type": "string",
      "default": "",
      "description": "The Git tag the release is associated with",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "delete",
            "get"
          ],
          "resource": [
            "release"
          ]
        }
      }
    },
    {
      "name": "returnAll",
      "displayName": "Return All",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "release",
            "file",
            "repository"
          ],
          "operation": [
            "getAll",
            "list",
            "getIssues"
          ]
        }
      }
    },
    {
      "name": "limit",
      "displayName": "Limit",
      "type": "number",
      "default": 20,
      "description": "Max number of results to return",
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      },
      "displayOptions": {
        "show": {
          "resource": [
            "release",
            "file",
            "repository"
          ],
          "operation": [
            "getAll",
            "list",
            "getIssues"
          ],
          "returnAll": [
            false
          ]
        }
      }
    },
    {
      "name": "getRepositoryIssuesFilters",
      "displayName": "Filters",
      "type": "collection",
      "default": {},
      "description": "Return only issues which are assigned to a specific user",
      "options": [
        {
          "name": "assignee_username",
          "displayName": "Assignee",
          "type": "string",
          "default": "",
          "description": "Return only issues which are assigned to a specific user"
        },
        {
          "name": "author_username",
          "displayName": "Creator",
          "type": "string",
          "default": "",
          "description": "Return only issues which were created by a specific user"
        },
        {
          "name": "search",
          "displayName": "Search",
          "type": "string",
          "default": "",
          "description": "Search issues against their title and description"
        },
        {
          "name": "labels",
          "displayName": "Labels",
          "type": "string",
          "default": "",
          "description": "Return only issues with the given labels. Multiple lables can be separated by comma."
        },
        {
          "name": "updated_after",
          "displayName": "Updated After",
          "type": "dateTime",
          "default": "",
          "description": "Return only issues updated at or after this time"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "getIssues"
          ],
          "resource": [
            "repository"
          ]
        }
      }
    },
    {
      "name": "filePath",
      "displayName": "File Path",
      "type": "string",
      "default": "",
      "description": "The file path of the file. Has to contain the full path or leave it empty for root folder.",
      "placeholder": "docs/README.md",
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "page",
      "displayName": "Page",
      "type": "number",
      "default": 1,
      "description": "Page of results to display",
      "typeOptions": {
        "minValue": 1,
        "maxValue": 1000
      },
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "list"
          ],
          "returnAll": [
            false
          ]
        }
      }
    },
    {
      "name": "additionalParameters",
      "displayName": "Additional Parameters",
      "type": "collection",
      "default": {},
      "description": "Additional fields to add",
      "placeholder": "Add Parameter",
      "options": [
        {
          "name": "ref",
          "displayName": "Reference",
          "type": "string",
          "default": "",
          "description": "The name of the commit/branch/tag. Default: the repositoryâ€™s default branch (usually main).",
          "placeholder": "main"
        },
        {
          "name": "recursive",
          "displayName": "Recursive",
          "type": "boolean",
          "default": false,
          "description": "Whether or not to get a recursive file tree. Default is false."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "list"
          ]
        }
      }
    },
    {
      "name": "asBinaryProperty",
      "displayName": "As Binary Property",
      "type": "boolean",
      "default": true,
      "description": "Whether to set the data of the file as binary property instead of returning the raw API response",
      "displayOptions": {
        "show": {
          "operation": [
            "get"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "binaryPropertyName",
      "displayName": "Put Output File in Field",
      "type": "string",
      "default": "data",
      "placeholder": "",
      "required": true,
      "displayOptions": {
        "show": {
          "asBinaryProperty": [
            true
          ],
          "operation": [
            "get"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "binaryData",
      "displayName": "Binary File",
      "type": "boolean",
      "default": false,
      "description": "Whether the data to upload should be taken from binary field",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "edit"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "fileContent",
      "displayName": "File Content",
      "type": "string",
      "default": "",
      "description": "The text content of the file",
      "placeholder": "",
      "required": true,
      "displayOptions": {
        "show": {
          "binaryData": [
            false
          ],
          "operation": [
            "create",
            "edit"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "commitMessage",
      "displayName": "Commit Message",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "delete",
            "edit"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "name": "branch",
      "displayName": "Branch",
      "type": "string",
      "default": "",
      "description": "Name of the new branch to create. The commit is added to this branch.",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "delete",
            "edit"
          ],
          "resource": [
            "file"
          ]
        }
      }
    }
  ],
  "credentialsConfig": [
    {
      "name": "gitlabApi",
      "required": true
    },
    {
      "name": "authentication",
      "required": false
    },
    {
      "name": "resource",
      "required": false
    },
    {
      "name": "operation",
      "required": false
    },
    {
      "name": "operation",
      "required": false
    },
    {
      "name": "operation",
      "required": false
    },
    {
      "name": "operation",
      "required": false
    },
    {
      "name": "operation",
      "required": false
    },
    {
      "name": "owner",
      "required": true
    },
    {
      "name": "assignee_ids",
      "required": false
    },
    {
      "name": "issueNumber",
      "required": true
    },
    {
      "name": "labels",
      "required": false
    },
    {
      "name": "assignee_ids",
      "required": false
    },
    {
      "name": "due_date",
      "required": false
    },
    {
      "name": "issueNumber",
      "required": true
    },
    {
      "name": "releaseTag",
      "required": true
    },
    {
      "name": "projectId",
      "required": true
    },
    {
      "name": "sort",
      "required": false
    },
    {
      "name": "projectId",
      "required": true
    },
    {
      "name": "getRepositoryIssuesFilters",
      "required": false
    },
    {
      "name": "order_by",
      "required": false
    },
    {
      "name": "sort",
      "required": false
    },
    {
      "name": "filePath",
      "required": false
    },
    {
      "name": "asBinaryProperty",
      "required": true
    },
    {
      "name": "binaryData",
      "required": true
    },
    {
      "name": "author",
      "required": false
    },
    {
      "name": "encoding",
      "required": false
    }
  ],
  "io": {
    "inputs": [],
    "outputs": [],
    "outputNames": [],
    "hints": {}
  },
  "wiring": {
    "role": "generic",
    "requires": [],
    "optional": [],
    "consumedBy": [],
    "consumes": [],
    "produces": []
  }
}