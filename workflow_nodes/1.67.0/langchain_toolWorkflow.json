{
  "nodeType": "@n8n/n8n-nodes-langchain.toolWorkflow",
  "displayName": "Call n8n Workflow Tool",
  "description": "Uses another n8n workflow as a tool. Allows packaging any n8n node(s) as a tool.",
  "version": [
    1,
    1.1,
    1.2
  ],
  "properties": [
    {
      "name": "noticeTemplateExample",
      "displayName": "See an example of a workflow to suggest meeting slots using AI <a href=\"/templates/1953\" target=\"_blank\">here</a>.",
      "type": "notice",
      "default": ""
    },
    {
      "name": "name",
      "displayName": "Name",
      "type": "string",
      "default": "",
      "placeholder": "My_Color_Tool",
      "displayOptions": {
        "show": {
          "@version": [
            1
          ]
        }
      }
    },
    {
      "name": "description",
      "displayName": "Description",
      "type": "string",
      "default": "",
      "placeholder": "Call this tool to get a random color. The input should be a string with comma separted names of colors to exclude.",
      "typeOptions": {
        "rows": 3
      }
    },
    {
      "name": "executeNotice",
      "displayName": "This tool will call the workflow you define below, and look in the last node for the response. The workflow needs to start with an Execute Workflow trigger",
      "type": "notice",
      "default": ""
    },
    {
      "name": "source",
      "displayName": "Source",
      "type": "options",
      "default": "database",
      "description": "Load the workflow from the database by ID",
      "options": [
        {
          "name": "Database",
          "value": "database",
          "description": "Load the workflow from the database by ID"
        },
        {
          "name": "Define Below",
          "value": "parameter",
          "description": "Pass the JSON code of a workflow"
        }
      ]
    },
    {
      "name": "workflowId",
      "displayName": "Workflow ID",
      "type": "string",
      "default": "",
      "description": "The workflow to execute",
      "required": true,
      "displayOptions": "{\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tsource: ['database'],\n\t\t\t\t\t\t'@version': [{ _cnd: { lte: 1.1 }"
    },
    {
      "name": "workflowJson",
      "displayName": "Workflow JSON",
      "type": "json",
      "default": "\\n\\n\\n\\n\\n\\n\\n\\n\\n",
      "description": "The workflow JSON code to execute",
      "required": true,
      "typeOptions": {
        "rows": 10
      },
      "displayOptions": {
        "show": {
          "source": [
            "parameter"
          ]
        }
      }
    },
    {
      "name": "responsePropertyName",
      "displayName": "Field to Return",
      "type": "string",
      "default": "response",
      "description": "Where to find the data that this tool should return. n8n will look in the output of the last-executed node of the workflow for a field with this name, and return its value.",
      "required": true
    },
    {
      "name": "fields",
      "displayName": "Extra Workflow Inputs",
      "type": "fixedCollection",
      "default": {},
      "description": "These will be output by the 'execute workflow' trigger of the workflow being called",
      "placeholder": "Add Value",
      "typeOptions": {
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "type": [
            "stringValue"
          ]
        }
      }
    },
    {
      "name": "specifyInputSchema",
      "displayName": "Specify Input Schema",
      "type": "boolean",
      "default": false,
      "description": "Whether to specify the schema for the function. This would require the LLM to provide the input in the correct format and would validate it against the schema."
    }
  ],
  "credentialsConfig": [],
  "io": {
    "inputs": [],
    "outputs": [],
    "outputNames": [
      "Tool"
    ],
    "hints": {
      "connectTo": []
    }
  },
  "wiring": {
    "role": "tool",
    "requires": [],
    "optional": [],
    "consumedBy": [
      "AiAgent"
    ],
    "consumes": [],
    "produces": []
  }
}